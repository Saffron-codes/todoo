// Mocks generated by Mockito 5.3.2 from annotations
// in todolist_supabase/test/todo/data/datasources/todo_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:supabase_flutter/supabase_flutter.dart' as _i2;
import 'package:todolist_supabase/data/data_sources/todo/todo_data_source.dart'
    as _i5;
import 'package:todolist_supabase/data/models/todo/todo_model.dart' as _i3;
import 'package:todolist_supabase/domain/entities/todo/todo.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSupabaseClient_0 extends _i1.SmartFake
    implements _i2.SupabaseClient {
  _FakeSupabaseClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodoModel_1 extends _i1.SmartFake implements _i3.TodoModel {
  _FakeTodoModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTodo_2 extends _i1.SmartFake implements _i4.Todo {
  _FakeTodo_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TodoRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRemoteDataSourceImpl extends _i1.Mock
    implements _i5.TodoRemoteDataSourceImpl {
  MockTodoRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseClient get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeSupabaseClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.SupabaseClient);
  @override
  set client(_i2.SupabaseClient? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i3.TodoModel> checkTodo(
    String? id,
    bool? isChecked,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkTodo,
          [
            id,
            isChecked,
          ],
        ),
        returnValue: _i6.Future<_i3.TodoModel>.value(_FakeTodoModel_1(
          this,
          Invocation.method(
            #checkTodo,
            [
              id,
              isChecked,
            ],
          ),
        )),
      ) as _i6.Future<_i3.TodoModel>);
  @override
  _i6.Future<_i3.TodoModel> deleteTodo(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue: _i6.Future<_i3.TodoModel>.value(_FakeTodoModel_1(
          this,
          Invocation.method(
            #deleteTodo,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.TodoModel>);
  @override
  _i6.Stream<List<_i3.TodoModel>> getAllTodos() => (super.noSuchMethod(
        Invocation.method(
          #getAllTodos,
          [],
        ),
        returnValue: _i6.Stream<List<_i3.TodoModel>>.empty(),
      ) as _i6.Stream<List<_i3.TodoModel>>);
  @override
  _i6.Future<_i3.TodoModel> insertTodo(String? content) => (super.noSuchMethod(
        Invocation.method(
          #insertTodo,
          [content],
        ),
        returnValue: _i6.Future<_i3.TodoModel>.value(_FakeTodoModel_1(
          this,
          Invocation.method(
            #insertTodo,
            [content],
          ),
        )),
      ) as _i6.Future<_i3.TodoModel>);
}

/// A class which mocks [TodoModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoModel extends _i1.Mock implements _i3.TodoModel {
  MockTodoModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: '',
      ) as String);
  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get content => (super.noSuchMethod(
        Invocation.getter(#content),
        returnValue: '',
      ) as String);
  @override
  set content(String? _content) => super.noSuchMethod(
        Invocation.setter(
          #content,
          _content,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isCompleted => (super.noSuchMethod(
        Invocation.getter(#isCompleted),
        returnValue: false,
      ) as bool);
  @override
  set isCompleted(bool? _isCompleted) => super.noSuchMethod(
        Invocation.setter(
          #isCompleted,
          _isCompleted,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get createdAt => (super.noSuchMethod(
        Invocation.getter(#createdAt),
        returnValue: '',
      ) as String);
  @override
  set createdAt(String? _createdAt) => super.noSuchMethod(
        Invocation.setter(
          #createdAt,
          _createdAt,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Todo copyWith({
    String? id,
    String? content,
    bool? isCompleted,
    String? createdAt,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #id: id,
            #content: content,
            #isCompleted: isCompleted,
            #createdAt: createdAt,
          },
        ),
        returnValue: _FakeTodo_2(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #id: id,
              #content: content,
              #isCompleted: isCompleted,
              #createdAt: createdAt,
            },
          ),
        ),
      ) as _i4.Todo);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: '',
      ) as String);
}
